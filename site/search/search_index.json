{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the documentation for hikari-ongaku, a library, that handles the discord voice server for you.</p> <p></p> <p>Not sure what to do? Check out Getting Started for examples on how to setup a bot!</p>"},{"location":"#resources","title":"Resources","text":"<ul> <li>Hikari</li> <li>Examples</li> </ul>"},{"location":"api_reference/","title":"All the API References.","text":""},{"location":"api_reference/errors/","title":"errors","text":""},{"location":"api_reference/errors/#ongaku.error.BuildException","title":"BuildException","text":"<p>             Bases: <code>OngakuBaseException</code></p> <p>Raised when a model fails to build correctly.</p>"},{"location":"api_reference/errors/#ongaku.error.LavalinkConnectionException","title":"LavalinkConnectionException","text":"<p>             Bases: <code>LavalinkException</code></p> <p>Raised when any Rest action (or a websocket connection) fails to connect to the lavalink server.</p>"},{"location":"api_reference/errors/#ongaku.error.LavalinkException","title":"LavalinkException","text":"<p>             Bases: <code>OngakuBaseException</code></p> <p>Raised when an error is returned on the websocket, or a rest command.</p>"},{"location":"api_reference/errors/#ongaku.error.NodeException","title":"NodeException","text":"<p>             Bases: <code>OngakuBaseException</code></p> <p>Base node exception.</p>"},{"location":"api_reference/errors/#ongaku.error.NodeMissingException","title":"NodeMissingException","text":"<p>             Bases: <code>NodeException</code></p> <p>Raised when a node is missing.</p>"},{"location":"api_reference/errors/#ongaku.error.OngakuBaseException","title":"OngakuBaseException","text":"<p>             Bases: <code>Exception</code></p> <p>The base exception for all Ongaku exceptions.</p>"},{"location":"api_reference/errors/#ongaku.error.PlayerEmptyQueueException","title":"PlayerEmptyQueueException","text":"<p>             Bases: <code>PlayerException</code></p> <p>Raised when there is no tracks in the queue.</p>"},{"location":"api_reference/errors/#ongaku.error.PlayerException","title":"PlayerException","text":"<p>             Bases: <code>OngakuBaseException</code></p> <p>Base player related exceptions</p>"},{"location":"api_reference/errors/#ongaku.error.PlayerInvalidVolumeException","title":"PlayerInvalidVolumeException","text":"<p>             Bases: <code>PlayerException</code></p> <p>Raised when the volume is above 1000, or below 0.</p>"},{"location":"api_reference/errors/#ongaku.error.PlayerMissingException","title":"PlayerMissingException","text":"<p>             Bases: <code>PlayerException</code></p> <p>Raised when the player does not exist.</p>"},{"location":"api_reference/errors/#ongaku.error.PlayerVolumeLevelException","title":"PlayerVolumeLevelException","text":"<p>             Bases: <code>PlayerException</code></p> <p>Raised when an invalid volume is set.</p>"},{"location":"api_reference/errors/#ongaku.error.ResponseException","title":"ResponseException","text":"<p>             Bases: <code>OngakuBaseException</code></p> <p>Raised when a 4XX or 5XX error gets received.</p>"},{"location":"api_reference/errors/#ongaku.error.SessionNotStartedException","title":"SessionNotStartedException","text":"<p>             Bases: <code>LavalinkException</code></p> <p>Raised when the session id is needed, but is null.</p>"},{"location":"api_reference/ongaku/","title":"Ongaku","text":""},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku","title":"Ongaku","text":"<pre><code>Ongaku(\n    bot: hikari.GatewayBot,\n    *,\n    host: str = \"localhost\",\n    port: int = 2333,\n    password: str | None = None,\n    version: enums.VersionType = enums.VersionType.V4,\n    max_retries: int = 3\n)\n</code></pre> <p>Base Ongaku class</p> <p>The base Ongaku class, where everything starts from.</p> <p>Parameters:</p> Name Type Description Default <code>host</code> <code>str</code> <p>The host, or IP that your lavalink server is running on.</p> <code>'localhost'</code> <code>port</code> <code>int</code> <p>The port your lavalink server runs on.</p> <code>2333</code> <code>password</code> <code>str | None</code> <p>The password for your lavalink server.</p> <code>None</code> <code>version</code> <code>models.VersionType</code> <p>The version of lavalink you are running. Currently only supports V3, or V4.</p> <code>enums.VersionType.V4</code> <code>max_retries</code> <code>int</code> <p>The maximum amount of retries for the Websocket.</p> <code>3</code>"},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku.bot","title":"bot  <code>property</code>","text":"<pre><code>bot: hikari.RESTAware\n</code></pre> <p>Gateway bot.</p> <p>The gateway bot the server is attached to.</p> <p>Returns: hikari.RESTAware     A Rest aware hikari bot.</p>"},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku.connected","title":"connected  <code>property</code>","text":"<pre><code>connected: bool\n</code></pre> <p>Connected to lavalink.</p> <p>Whether or not it is connected to lavalink's websocket.</p> <p>Returns:</p> Type Description <code>bool</code> <p>If true, it is connected to the server, if false, it is not.</p>"},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku.internal","title":"internal  <code>property</code>","text":"<pre><code>internal: OngakuInternal\n</code></pre> <p>For internal information about the bot.</p> <p>Returns:</p> Type Description <code>OngakuInternal</code> <p>An internal class for ongaku.</p>"},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku.players","title":"players  <code>property</code>","text":"<pre><code>players: list[player.Player]\n</code></pre> <p>players</p> <p>All the currently active players.</p> <p>Returns:</p> Type Description <code>list[Player]</code> <p>A list of players</p>"},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku.rest","title":"rest  <code>property</code>","text":"<pre><code>rest: rest.RestApi\n</code></pre> <p>Rest</p> <p>The REST API for the Lavalink server.</p> <p>Returns:</p> Type Description <code>rest.RestApi</code> <p>The rest api for lavalink</p>"},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku.connect","title":"connect  <code>async</code>","text":"<pre><code>connect(user_id: hikari.Snowflake) -&gt; None\n</code></pre> <p>connect to the server</p> <p>Allows for the user to connect to the server.</p>"},{"location":"api_reference/ongaku/#ongaku.ongaku.Ongaku.create_player","title":"create_player  <code>async</code>","text":"<pre><code>create_player(\n    guild_id: hikari.Snowflake, channel_id: hikari.Snowflake\n) -&gt; player.Player\n</code></pre> <p>Creates a new node.</p> <p>Creates a new node for players to attach to.</p> <p>Parameters:</p> Name Type Description Default <code>bot</code> <code>hikari.GatewayBot</code> <p>The bot that you are currently running.</p> required <code>shard_id</code> <code>int</code> <p>The current shard id.</p> required <code>user_id</code> <code>hikari.Snowflake</code> <p>The bots user id.</p> required"},{"location":"api_reference/ongaku/#ongaku.ongaku.OngakuInternal","title":"OngakuInternal","text":"<pre><code>OngakuInternal(uri: str, max_retries: int = 3)\n</code></pre> <p>asdf</p>"},{"location":"api_reference/player/","title":"Player","text":""},{"location":"api_reference/player/#ongaku.player.Player","title":"Player","text":"<pre><code>Player(\n    *,\n    bot: hikari.GatewayBot,\n    ongaku: Ongaku,\n    channel_id: hikari.Snowflake,\n    endpoint: str,\n    guild_id: hikari.Snowflake,\n    on_close: t.Awaitable[None],\n    owner: VoiceComponent,\n    session_id: str,\n    shard_id: int,\n    token: str,\n    user_id: hikari.Snowflake\n)\n</code></pre> <p>             Bases: <code>VoiceConnection</code></p>"},{"location":"api_reference/player/#ongaku.player.Player.channel_id","title":"channel_id  <code>property</code>","text":"<pre><code>channel_id: hikari.Snowflake\n</code></pre> <p>ID of the voice channel this voice connection is in.</p>"},{"location":"api_reference/player/#ongaku.player.Player.guild_id","title":"guild_id  <code>property</code>","text":"<pre><code>guild_id: hikari.Snowflake\n</code></pre> <p>ID of the guild this voice connection is in.</p>"},{"location":"api_reference/player/#ongaku.player.Player.is_alive","title":"is_alive  <code>property</code>","text":"<pre><code>is_alive: bool\n</code></pre> <p>Whether the connection is alive.</p>"},{"location":"api_reference/player/#ongaku.player.Player.is_paused","title":"is_paused  <code>property</code>","text":"<pre><code>is_paused: bool\n</code></pre> <p>Returns whether the bot is paused or not.</p>"},{"location":"api_reference/player/#ongaku.player.Player.owner","title":"owner  <code>property</code>","text":"<pre><code>owner: VoiceComponent\n</code></pre> <p>Return the component that is managing this connection.</p>"},{"location":"api_reference/player/#ongaku.player.Player.queue","title":"queue  <code>property</code>","text":"<pre><code>queue: tuple[abc.Track, ...]\n</code></pre> <p>View all the tracks that currently exist.</p>"},{"location":"api_reference/player/#ongaku.player.Player.shard_id","title":"shard_id  <code>property</code>","text":"<pre><code>shard_id: int\n</code></pre> <p>ID of the shard that requested the connection.</p>"},{"location":"api_reference/player/#ongaku.player.Player.clear","title":"clear  <code>async</code>","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clears the queue, and stops the current song.</p>"},{"location":"api_reference/player/#ongaku.player.Player.disconnect","title":"disconnect  <code>async</code>","text":"<pre><code>disconnect() -&gt; None\n</code></pre> <p>Signal the process to shut down.</p>"},{"location":"api_reference/player/#ongaku.player.Player.join","title":"join  <code>async</code>","text":"<pre><code>join() -&gt; None\n</code></pre> <p>Wait for the process to halt before continuing.</p>"},{"location":"api_reference/player/#ongaku.player.Player.notify","title":"notify  <code>async</code>","text":"<pre><code>notify(event: hikari.VoiceEvent) -&gt; None\n</code></pre> <p>Submit an event to the voice connection to be processed.</p>"},{"location":"api_reference/player/#ongaku.player.Player.position","title":"position  <code>async</code>","text":"<pre><code>position(value: int) -&gt; None\n</code></pre> <p>Change the tracks position in ms.</p> <p>Raises:</p> Type Description <code>PlayerInvalidPosition: When the track position selected is not a valid position.</code>"},{"location":"api_reference/rest/","title":"Rest","text":""},{"location":"api_reference/rest/#ongaku.rest.InternalPlayer","title":"InternalPlayer","text":"<pre><code>InternalPlayer(ongaku: Ongaku)\n</code></pre> <p>The Rest based actions for the player.</p>"},{"location":"api_reference/rest/#ongaku.rest.InternalPlayer.delete_player","title":"delete_player  <code>async</code>","text":"<pre><code>delete_player(\n    session_id: str, guild_id: hikari.Snowflake\n) -&gt; None\n</code></pre> <p>Creates a new player for the specified guild. If one already exists, returns that instead.</p>"},{"location":"api_reference/rest/#ongaku.rest.InternalPlayer.update_player","title":"update_player  <code>async</code>","text":"<pre><code>update_player(\n    guild_id: hikari.Snowflake,\n    session_id: str,\n    *,\n    track: hikari.UndefinedNoneOr[\n        abc.Track\n    ] = hikari.UNDEFINED,\n    position: hikari.UndefinedOr[int] = hikari.UNDEFINED,\n    end_time: hikari.UndefinedOr[int] = hikari.UNDEFINED,\n    volume: hikari.UndefinedOr[int] = hikari.UNDEFINED,\n    paused: hikari.UndefinedOr[bool] = hikari.UNDEFINED,\n    voice: hikari.UndefinedOr[abc.Voice] = hikari.UNDEFINED,\n    no_replace: bool = True\n) -&gt; abc.Player\n</code></pre> <p>Update a player</p> <p>Updates a player with the new parameters, or creates a new one if none exist.</p> <p>Parameters:</p> Name Type Description Default <code>guild_id</code> <code>hikari.Snowflake</code> <p>The guild id that the bot is playing in.</p> required <code>session_id</code> <code>str</code> <p>The session_id for the lavalink server session.</p> required"},{"location":"api_reference/rest/#ongaku.rest.InternalTrack","title":"InternalTrack","text":"<pre><code>InternalTrack(ongaku: Ongaku)\n</code></pre> <p>The rest based actions for the track.</p>"},{"location":"api_reference/rest/#ongaku.rest.RestApi","title":"RestApi","text":"<pre><code>RestApi(ongaku: Ongaku)\n</code></pre> <p>The base rest class for all rest related things.</p>"},{"location":"api_reference/rest/#ongaku.rest.RestApi.fetch_info","title":"fetch_info  <code>async</code>","text":"<pre><code>fetch_info() -&gt; abc.Info\n</code></pre> <p>Fetch the information about the Lavalink server.</p> <p>Returns: Returns a</p>"},{"location":"api_reference/abc/events/","title":"Events","text":""},{"location":"api_reference/abc/events/#ongaku.abc.events.OngakuEvent","title":"OngakuEvent","text":"<p>             Bases: <code>hikari.Event</code>, <code>abc.ABC</code></p> <p>The base Ongaku events.</p>"},{"location":"api_reference/abc/events/#ongaku.abc.events.PlayerQueueEmpty","title":"PlayerQueueEmpty","text":"<p>             Bases: <code>PlayerBase</code>, <code>abc.ABC</code></p> <p>When the player queue is empty, this is called.</p>"},{"location":"api_reference/abc/events/#ongaku.abc.events.TrackStart","title":"TrackStart","text":"<p>             Bases: <code>TrackBase</code>, <code>abc.ABC</code></p> <p>Base Track Start event.</p>"},{"location":"api_reference/abc/lavalink/","title":"Lavalink","text":""},{"location":"api_reference/abc/lavalink/#ongaku.abc.lavalink.Git","title":"Git  <code>dataclass</code>","text":"<p>The git information of the Lavalink server.</p>"},{"location":"api_reference/abc/lavalink/#ongaku.abc.lavalink.Info","title":"Info  <code>dataclass</code>","text":"<p>             Bases: <code>abc.ABC</code></p> <p>The information about the lavalink server.</p>"},{"location":"api_reference/abc/lavalink/#ongaku.abc.lavalink.Plugin","title":"Plugin  <code>dataclass</code>","text":"<p>The plugin information of the Lavalink server.</p>"},{"location":"api_reference/abc/lavalink/#ongaku.abc.lavalink.Version","title":"Version  <code>dataclass</code>","text":"<p>The version information of the Lavalink server.</p>"},{"location":"api_reference/abc/player/","title":"Player","text":""},{"location":"api_reference/abc/player/#ongaku.abc.player.Player","title":"Player  <code>dataclass</code>","text":"<p>The player data returned from lavalink.</p>"},{"location":"api_reference/abc/player/#ongaku.abc.player.State","title":"State  <code>dataclass</code>","text":"<p>The player state.</p>"},{"location":"api_reference/abc/player/#ongaku.abc.player.Voice","title":"Voice  <code>dataclass</code>","text":"<p>The voice connection data.</p>"},{"location":"api_reference/abc/session/","title":"Session","text":""},{"location":"api_reference/abc/track/","title":"Track","text":""},{"location":"api_reference/abc/track/#ongaku.abc.track.Track","title":"Track  <code>dataclass</code>","text":"<p>             Bases: <code>abc.ABC</code></p> <p>A track Object.</p>"},{"location":"api_reference/abc/track/#ongaku.abc.track.TrackInfo","title":"TrackInfo  <code>dataclass</code>","text":"<p>Information about related track.</p>"},{"location":"api_reference/events/event_handler/","title":"Event Handler","text":""},{"location":"api_reference/events/track/","title":"Track","text":""},{"location":"api_reference/events/track/#ongaku.events.track.TrackEndEvent","title":"TrackEndEvent","text":"<pre><code>TrackEndEvent(\n    app: hikari.RESTAware, payload: dict[t.Any, t.Any]\n)\n</code></pre> <p>             Bases: <code>abc.TrackEnd</code>, <code>abc.OngakuEvent</code></p> <p>Called when a track starts!</p>"},{"location":"api_reference/events/track/#ongaku.events.track.TrackExceptionEvent","title":"TrackExceptionEvent","text":"<pre><code>TrackExceptionEvent(\n    app: hikari.RESTAware, payload: dict[t.Any, t.Any]\n)\n</code></pre> <p>             Bases: <code>abc.TrackException</code>, <code>abc.OngakuEvent</code></p> <p>Called when a track starts!</p>"},{"location":"api_reference/events/track/#ongaku.events.track.TrackStartEvent","title":"TrackStartEvent","text":"<pre><code>TrackStartEvent(\n    app: hikari.RESTAware, payload: dict[t.Any, t.Any]\n)\n</code></pre> <p>             Bases: <code>abc.TrackStart</code>, <code>abc.OngakuEvent</code></p> <p>Called when a track starts!</p>"},{"location":"api_reference/events/track/#ongaku.events.track.TrackStuckEvent","title":"TrackStuckEvent","text":"<pre><code>TrackStuckEvent(\n    app: hikari.RESTAware, payload: dict[t.Any, t.Any]\n)\n</code></pre> <p>             Bases: <code>abc.TrackStuck</code>, <code>abc.OngakuEvent</code></p> <p>Called when a track starts!</p>"},{"location":"getting_started/","title":"Getting started","text":"<p>Getting Started with Ongaku.</p> <p>In the following documents, you will learn how to work with ongaku, from its most basic features, to its more advanced features.</p>"},{"location":"getting_started/basics/","title":"The basics","text":""},{"location":"getting_started/basics/#installation","title":"Installation","text":"<p>To install Ongaku, simply run the following:</p> <pre><code>pip install hikari-ongaku\n</code></pre>"},{"location":"getting_started/basics/#basic-setup","title":"Basic setup","text":"<p>All bots that use Ongaku, require the following basics. </p> <ul> <li>Gateway Bot</li> <li>Ongaku</li> <li>Starting Event</li> </ul>"},{"location":"getting_started/basics/#gateway-bot","title":"Gateway Bot","text":"<p>you must have a gateway bot, like any other hikari discord bot. This library is compatible with all hikari command handlers.</p> <pre><code>import hikari\n\nbot = hikari.GatewayBot(\n    token=\"...\"\n)\n\nbot.run()\n</code></pre>"},{"location":"getting_started/basics/#ongaku","title":"Ongaku","text":"<p>You now must make the ongaku class, and attach it to hikari.</p> <pre><code>import ongaku\n\nlavalink = ongaku.Ongaku(\n    bot,\n    password=\"youshallnotpass\"\n)\n</code></pre>"},{"location":"getting_started/basics/#starting-event","title":"Starting event","text":"<p>Finally, you must have the starting event.</p> <pre><code>@bot.listen(hikari.events.StartedEvent)\nasync def started_event(event: hikari.events.StartedEvent):\n    await lavalink.connect(\n        bot.get_me().id\n    )\n</code></pre>"},{"location":"getting_started/basics/#thats-it","title":"Thats it!","text":"<p>After doing all of that, you can now officially start the bot, and have a connection to your lavalink server. For actually playing audio, check out the commands for more information.</p>"},{"location":"getting_started/commands/","title":"Creating simple commands.","text":""},{"location":"getting_started/nodes/","title":"Nodes","text":"<p>Coming soon...</p>"}]}